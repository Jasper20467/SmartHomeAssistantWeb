version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - TZ=Asia/Taipei
    # 移除 volumes 掛載，改用 Dockerfile 內建時區設定
    # volumes:
    #   - /etc/timezone:/etc/timezone:ro
    #   - /etc/localtime:/etc/localtime:ro
      # No BACKEND_URL needed for local Docker Compose - will use default config
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # 移除時區檔案掛載，改用 Dockerfile 內建時區設定
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/smarthome
      - ENVIRONMENT=development
      - TZ=Asia/Taipei
    networks:
      - app-network

  linebot:
    build:
      context: .
      dockerfile: docker/linebot.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./LineBotAI:/app
      # 移除時區檔案掛載，改用 Dockerfile 內建時區設定
    depends_on:
      - backend
    environment:
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - CHATGPT_API_KEY=${CHATGPT_API_KEY}
      - BACKEND_API_URL=http://backend:8000
      - DOMAIN_NAME=localhost
      - DEBUG_MODE=true
      - DEBUG_STAGE=true
      - TZ=Asia/Taipei
    networks:
      - app-network

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # 移除時區檔案掛載，PostgreSQL 官方映像檔支援 TZ 環境變數
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=smarthome
      - TZ=Asia/Taipei
      - PGTZ=Asia/Taipei
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
